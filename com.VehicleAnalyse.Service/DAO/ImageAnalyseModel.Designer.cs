//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_0", "VehicleColor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bocom.ImageAnalysisClient.Service.DAO.VehicleColor), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_1", "PlateColor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bocom.ImageAnalysisClient.Service.DAO.PlateColor), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_2", "VehicleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bocom.ImageAnalysisClient.Service.DAO.VehicleType), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_3", "VehicleDetailType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bocom.ImageAnalysisClient.Service.DAO.VehicleDetailType), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_4", "PlateStructure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bocom.ImageAnalysisClient.Service.DAO.PlateStructure), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_5", "VehicleBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bocom.ImageAnalysisClient.Service.DAO.VehicleBrand), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_VehicleBrand_0", "VehicleBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Bocom.ImageAnalysisClient.Service.DAO.VehicleBrand), "VehicleBrand1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.VehicleBrand), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_01", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bocom.ImageAnalysisClient.Service.DAO.Task), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_02", "IllegalBehavior", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Bocom.ImageAnalysisClient.Service.DAO.IllegalBehavior), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]
[assembly: EdmRelationshipAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_11", "IllegalBehavior", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Bocom.ImageAnalysisClient.Service.DAO.IllegalBehavior), "AnalyseResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bocom.ImageAnalysisClient.Service.DAO.AnalyseResult), true)]

#endregion

namespace Bocom.ImageAnalysisClient.Service.DAO
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class ImageAnalyseEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“ImageAnalyseEntities”部分中的连接字符串初始化新 ImageAnalyseEntities 对象。
        /// </summary>
        public ImageAnalyseEntities() : base("name=ImageAnalyseEntities", "ImageAnalyseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ImageAnalyseEntities 对象。
        /// </summary>
        public ImageAnalyseEntities(string connectionString) : base(connectionString, "ImageAnalyseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ImageAnalyseEntities 对象。
        /// </summary>
        public ImageAnalyseEntities(EntityConnection connection) : base(connection, "ImageAnalyseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<AnalyseResult> AnalyseResults
        {
            get
            {
                if ((_AnalyseResults == null))
                {
                    _AnalyseResults = base.CreateObjectSet<AnalyseResult>("AnalyseResults");
                }
                return _AnalyseResults;
            }
        }
        private ObjectSet<AnalyseResult> _AnalyseResults;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PlateColor> PlateColors
        {
            get
            {
                if ((_PlateColors == null))
                {
                    _PlateColors = base.CreateObjectSet<PlateColor>("PlateColors");
                }
                return _PlateColors;
            }
        }
        private ObjectSet<PlateColor> _PlateColors;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PlateStructure> PlateStructures
        {
            get
            {
                if ((_PlateStructures == null))
                {
                    _PlateStructures = base.CreateObjectSet<PlateStructure>("PlateStructures");
                }
                return _PlateStructures;
            }
        }
        private ObjectSet<PlateStructure> _PlateStructures;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VehicleBrand> VehicleBrands
        {
            get
            {
                if ((_VehicleBrands == null))
                {
                    _VehicleBrands = base.CreateObjectSet<VehicleBrand>("VehicleBrands");
                }
                return _VehicleBrands;
            }
        }
        private ObjectSet<VehicleBrand> _VehicleBrands;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VehicleColor> VehicleColors
        {
            get
            {
                if ((_VehicleColors == null))
                {
                    _VehicleColors = base.CreateObjectSet<VehicleColor>("VehicleColors");
                }
                return _VehicleColors;
            }
        }
        private ObjectSet<VehicleColor> _VehicleColors;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VehicleDetailType> VehicleDetailTypes
        {
            get
            {
                if ((_VehicleDetailTypes == null))
                {
                    _VehicleDetailTypes = base.CreateObjectSet<VehicleDetailType>("VehicleDetailTypes");
                }
                return _VehicleDetailTypes;
            }
        }
        private ObjectSet<VehicleDetailType> _VehicleDetailTypes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VehicleType> VehicleTypes
        {
            get
            {
                if ((_VehicleTypes == null))
                {
                    _VehicleTypes = base.CreateObjectSet<VehicleType>("VehicleTypes");
                }
                return _VehicleTypes;
            }
        }
        private ObjectSet<VehicleType> _VehicleTypes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<IllegalBehavior> IllegalBehaviors
        {
            get
            {
                if ((_IllegalBehaviors == null))
                {
                    _IllegalBehaviors = base.CreateObjectSet<IllegalBehavior>("IllegalBehaviors");
                }
                return _IllegalBehaviors;
            }
        }
        private ObjectSet<IllegalBehavior> _IllegalBehaviors;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 AnalyseResults EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAnalyseResults(AnalyseResult analyseResult)
        {
            base.AddObject("AnalyseResults", analyseResult);
        }
    
        /// <summary>
        /// 用于向 PlateColors EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPlateColors(PlateColor plateColor)
        {
            base.AddObject("PlateColors", plateColor);
        }
    
        /// <summary>
        /// 用于向 PlateStructures EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPlateStructures(PlateStructure plateStructure)
        {
            base.AddObject("PlateStructures", plateStructure);
        }
    
        /// <summary>
        /// 用于向 Tasks EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// 用于向 VehicleBrands EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVehicleBrands(VehicleBrand vehicleBrand)
        {
            base.AddObject("VehicleBrands", vehicleBrand);
        }
    
        /// <summary>
        /// 用于向 VehicleColors EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVehicleColors(VehicleColor vehicleColor)
        {
            base.AddObject("VehicleColors", vehicleColor);
        }
    
        /// <summary>
        /// 用于向 VehicleDetailTypes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVehicleDetailTypes(VehicleDetailType vehicleDetailType)
        {
            base.AddObject("VehicleDetailTypes", vehicleDetailType);
        }
    
        /// <summary>
        /// 用于向 VehicleTypes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVehicleTypes(VehicleType vehicleType)
        {
            base.AddObject("VehicleTypes", vehicleType);
        }
    
        /// <summary>
        /// 用于向 IllegalBehaviors EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToIllegalBehaviors(IllegalBehavior illegalBehavior)
        {
            base.AddObject("IllegalBehaviors", illegalBehavior);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="AnalyseResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnalyseResult : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 AnalyseResult 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="taskId">TaskId 属性的初始值。</param>
        /// <param name="fileName">FileName 属性的初始值。</param>
        /// <param name="cameraId">CameraId 属性的初始值。</param>
        /// <param name="plateNumber">PlateNumber 属性的初始值。</param>
        /// <param name="plateColor">PlateColor 属性的初始值。</param>
        /// <param name="vehicleType">VehicleType 属性的初始值。</param>
        /// <param name="detailVehicleType">DetailVehicleType 属性的初始值。</param>
        /// <param name="plateRegion">PlateRegion 属性的初始值。</param>
        /// <param name="plateType">PlateType 属性的初始值。</param>
        /// <param name="vehicleColor">VehicleColor 属性的初始值。</param>
        /// <param name="manufacturer">Manufacturer 属性的初始值。</param>
        /// <param name="errorCode">ErrorCode 属性的初始值。</param>
        public static AnalyseResult CreateAnalyseResult(global::System.Int64 id, global::System.Int64 taskId, global::System.String fileName, global::System.Int64 cameraId, global::System.String plateNumber, global::System.Byte plateColor, global::System.Byte vehicleType, global::System.Byte detailVehicleType, global::System.String plateRegion, global::System.Byte plateType, global::System.Byte vehicleColor, global::System.Int64 manufacturer, global::System.Int16 errorCode)
        {
            AnalyseResult analyseResult = new AnalyseResult();
            analyseResult.Id = id;
            analyseResult.TaskId = taskId;
            analyseResult.FileName = fileName;
            analyseResult.CameraId = cameraId;
            analyseResult.PlateNumber = plateNumber;
            analyseResult.PlateColor = plateColor;
            analyseResult.VehicleType = vehicleType;
            analyseResult.DetailVehicleType = detailVehicleType;
            analyseResult.PlateRegion = plateRegion;
            analyseResult.PlateType = plateType;
            analyseResult.VehicleColor = vehicleColor;
            analyseResult.Manufacturer = manufacturer;
            analyseResult.ErrorCode = errorCode;
            return analyseResult;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int64 _TaskId;
        partial void OnTaskIdChanging(global::System.Int64 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CameraId
        {
            get
            {
                return _CameraId;
            }
            set
            {
                OnCameraIdChanging(value);
                ReportPropertyChanging("CameraId");
                _CameraId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CameraId");
                OnCameraIdChanged();
            }
        }
        private global::System.Int64 _CameraId;
        partial void OnCameraIdChanging(global::System.Int64 value);
        partial void OnCameraIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlateNumber
        {
            get
            {
                return _PlateNumber;
            }
            set
            {
                OnPlateNumberChanging(value);
                ReportPropertyChanging("PlateNumber");
                _PlateNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlateNumber");
                OnPlateNumberChanged();
            }
        }
        private global::System.String _PlateNumber;
        partial void OnPlateNumberChanging(global::System.String value);
        partial void OnPlateNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PlateColor
        {
            get
            {
                return _PlateColor;
            }
            set
            {
                OnPlateColorChanging(value);
                ReportPropertyChanging("PlateColor");
                _PlateColor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlateColor");
                OnPlateColorChanged();
            }
        }
        private global::System.Byte _PlateColor;
        partial void OnPlateColorChanging(global::System.Byte value);
        partial void OnPlateColorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte VehicleType
        {
            get
            {
                return _VehicleType;
            }
            set
            {
                OnVehicleTypeChanging(value);
                ReportPropertyChanging("VehicleType");
                _VehicleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleType");
                OnVehicleTypeChanged();
            }
        }
        private global::System.Byte _VehicleType;
        partial void OnVehicleTypeChanging(global::System.Byte value);
        partial void OnVehicleTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte DetailVehicleType
        {
            get
            {
                return _DetailVehicleType;
            }
            set
            {
                OnDetailVehicleTypeChanging(value);
                ReportPropertyChanging("DetailVehicleType");
                _DetailVehicleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DetailVehicleType");
                OnDetailVehicleTypeChanged();
            }
        }
        private global::System.Byte _DetailVehicleType;
        partial void OnDetailVehicleTypeChanging(global::System.Byte value);
        partial void OnDetailVehicleTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlateRegion
        {
            get
            {
                return _PlateRegion;
            }
            set
            {
                OnPlateRegionChanging(value);
                ReportPropertyChanging("PlateRegion");
                _PlateRegion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlateRegion");
                OnPlateRegionChanged();
            }
        }
        private global::System.String _PlateRegion;
        partial void OnPlateRegionChanging(global::System.String value);
        partial void OnPlateRegionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PlateType
        {
            get
            {
                return _PlateType;
            }
            set
            {
                OnPlateTypeChanging(value);
                ReportPropertyChanging("PlateType");
                _PlateType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlateType");
                OnPlateTypeChanged();
            }
        }
        private global::System.Byte _PlateType;
        partial void OnPlateTypeChanging(global::System.Byte value);
        partial void OnPlateTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte VehicleColor
        {
            get
            {
                return _VehicleColor;
            }
            set
            {
                OnVehicleColorChanging(value);
                ReportPropertyChanging("VehicleColor");
                _VehicleColor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VehicleColor");
                OnVehicleColorChanged();
            }
        }
        private global::System.Byte _VehicleColor;
        partial void OnVehicleColorChanging(global::System.Byte value);
        partial void OnVehicleColorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Manufacturer
        {
            get
            {
                return _Manufacturer;
            }
            set
            {
                OnManufacturerChanging(value);
                ReportPropertyChanging("Manufacturer");
                _Manufacturer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Manufacturer");
                OnManufacturerChanged();
            }
        }
        private global::System.Int64 _Manufacturer;
        partial void OnManufacturerChanging(global::System.Int64 value);
        partial void OnManufacturerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ErrorCode
        {
            get
            {
                return _ErrorCode;
            }
            set
            {
                OnErrorCodeChanging(value);
                ReportPropertyChanging("ErrorCode");
                _ErrorCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorCode");
                OnErrorCodeChanged();
            }
        }
        private global::System.Int16 _ErrorCode;
        partial void OnErrorCodeChanging(global::System.Int16 value);
        partial void OnErrorCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DriverRegion
        {
            get
            {
                return _DriverRegion;
            }
            set
            {
                OnDriverRegionChanging(value);
                ReportPropertyChanging("DriverRegion");
                _DriverRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DriverRegion");
                OnDriverRegionChanged();
            }
        }
        private global::System.String _DriverRegion;
        partial void OnDriverRegionChanging(global::System.String value);
        partial void OnDriverRegionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DriverIllegalBehavior
        {
            get
            {
                return _DriverIllegalBehavior;
            }
            set
            {
                OnDriverIllegalBehaviorChanging(value);
                ReportPropertyChanging("DriverIllegalBehavior");
                _DriverIllegalBehavior = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DriverIllegalBehavior");
                OnDriverIllegalBehaviorChanged();
            }
        }
        private Nullable<global::System.Int64> _DriverIllegalBehavior;
        partial void OnDriverIllegalBehaviorChanging(Nullable<global::System.Int64> value);
        partial void OnDriverIllegalBehaviorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoDriverRegion
        {
            get
            {
                return _CoDriverRegion;
            }
            set
            {
                OnCoDriverRegionChanging(value);
                ReportPropertyChanging("CoDriverRegion");
                _CoDriverRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoDriverRegion");
                OnCoDriverRegionChanged();
            }
        }
        private global::System.String _CoDriverRegion;
        partial void OnCoDriverRegionChanging(global::System.String value);
        partial void OnCoDriverRegionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CoDriverIllegalBehavior
        {
            get
            {
                return _CoDriverIllegalBehavior;
            }
            set
            {
                OnCoDriverIllegalBehaviorChanging(value);
                ReportPropertyChanging("CoDriverIllegalBehavior");
                _CoDriverIllegalBehavior = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CoDriverIllegalBehavior");
                OnCoDriverIllegalBehaviorChanged();
            }
        }
        private Nullable<global::System.Int64> _CoDriverIllegalBehavior;
        partial void OnCoDriverIllegalBehaviorChanging(Nullable<global::System.Int64> value);
        partial void OnCoDriverIllegalBehaviorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> PlateReliability
        {
            get
            {
                return _PlateReliability;
            }
            set
            {
                OnPlateReliabilityChanging(value);
                ReportPropertyChanging("PlateReliability");
                _PlateReliability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlateReliability");
                OnPlateReliabilityChanged();
            }
        }
        private Nullable<global::System.Byte> _PlateReliability;
        partial void OnPlateReliabilityChanging(Nullable<global::System.Byte> value);
        partial void OnPlateReliabilityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> ManufactureReliability
        {
            get
            {
                return _ManufactureReliability;
            }
            set
            {
                OnManufactureReliabilityChanging(value);
                ReportPropertyChanging("ManufactureReliability");
                _ManufactureReliability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufactureReliability");
                OnManufactureReliabilityChanged();
            }
        }
        private Nullable<global::System.Byte> _ManufactureReliability;
        partial void OnManufactureReliabilityChanging(Nullable<global::System.Byte> value);
        partial void OnManufactureReliabilityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleRegion
        {
            get
            {
                return _VehicleRegion;
            }
            set
            {
                OnVehicleRegionChanging(value);
                ReportPropertyChanging("VehicleRegion");
                _VehicleRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleRegion");
                OnVehicleRegionChanged();
            }
        }
        private global::System.String _VehicleRegion;
        partial void OnVehicleRegionChanging(global::System.String value);
        partial void OnVehicleRegionChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_0", "VehicleColor")]
        public VehicleColor VehicleColor1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleColor>("ImageAnalyseDBModel.FK_AnalyseResult_0", "VehicleColor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleColor>("ImageAnalyseDBModel.FK_AnalyseResult_0", "VehicleColor").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleColor> VehicleColor1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleColor>("ImageAnalyseDBModel.FK_AnalyseResult_0", "VehicleColor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VehicleColor>("ImageAnalyseDBModel.FK_AnalyseResult_0", "VehicleColor", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_1", "PlateColor")]
        public PlateColor PlateColor1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlateColor>("ImageAnalyseDBModel.FK_AnalyseResult_1", "PlateColor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlateColor>("ImageAnalyseDBModel.FK_AnalyseResult_1", "PlateColor").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PlateColor> PlateColor1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlateColor>("ImageAnalyseDBModel.FK_AnalyseResult_1", "PlateColor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PlateColor>("ImageAnalyseDBModel.FK_AnalyseResult_1", "PlateColor", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_2", "VehicleType")]
        public VehicleType VehicleType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("ImageAnalyseDBModel.FK_AnalyseResult_2", "VehicleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("ImageAnalyseDBModel.FK_AnalyseResult_2", "VehicleType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleType> VehicleType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("ImageAnalyseDBModel.FK_AnalyseResult_2", "VehicleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VehicleType>("ImageAnalyseDBModel.FK_AnalyseResult_2", "VehicleType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_3", "VehicleDetailType")]
        public VehicleDetailType VehicleDetailType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleDetailType>("ImageAnalyseDBModel.FK_AnalyseResult_3", "VehicleDetailType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleDetailType>("ImageAnalyseDBModel.FK_AnalyseResult_3", "VehicleDetailType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleDetailType> VehicleDetailTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleDetailType>("ImageAnalyseDBModel.FK_AnalyseResult_3", "VehicleDetailType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VehicleDetailType>("ImageAnalyseDBModel.FK_AnalyseResult_3", "VehicleDetailType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_4", "PlateStructure")]
        public PlateStructure PlateStructure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlateStructure>("ImageAnalyseDBModel.FK_AnalyseResult_4", "PlateStructure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlateStructure>("ImageAnalyseDBModel.FK_AnalyseResult_4", "PlateStructure").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PlateStructure> PlateStructureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlateStructure>("ImageAnalyseDBModel.FK_AnalyseResult_4", "PlateStructure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PlateStructure>("ImageAnalyseDBModel.FK_AnalyseResult_4", "PlateStructure", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_5", "VehicleBrand")]
        public VehicleBrand VehicleBrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleBrand>("ImageAnalyseDBModel.FK_AnalyseResult_5", "VehicleBrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleBrand>("ImageAnalyseDBModel.FK_AnalyseResult_5", "VehicleBrand").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleBrand> VehicleBrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleBrand>("ImageAnalyseDBModel.FK_AnalyseResult_5", "VehicleBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VehicleBrand>("ImageAnalyseDBModel.FK_AnalyseResult_5", "VehicleBrand", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_01", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ImageAnalyseDBModel.FK_AnalyseResult_01", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ImageAnalyseDBModel.FK_AnalyseResult_01", "Task").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ImageAnalyseDBModel.FK_AnalyseResult_01", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("ImageAnalyseDBModel.FK_AnalyseResult_01", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_02", "IllegalBehavior")]
        public IllegalBehavior IllegalBehavior
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IllegalBehavior>("ImageAnalyseDBModel.FK_AnalyseResult_02", "IllegalBehavior").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IllegalBehavior>("ImageAnalyseDBModel.FK_AnalyseResult_02", "IllegalBehavior").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IllegalBehavior> IllegalBehaviorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IllegalBehavior>("ImageAnalyseDBModel.FK_AnalyseResult_02", "IllegalBehavior");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IllegalBehavior>("ImageAnalyseDBModel.FK_AnalyseResult_02", "IllegalBehavior", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_11", "IllegalBehavior")]
        public IllegalBehavior IllegalBehavior1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IllegalBehavior>("ImageAnalyseDBModel.FK_AnalyseResult_11", "IllegalBehavior").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IllegalBehavior>("ImageAnalyseDBModel.FK_AnalyseResult_11", "IllegalBehavior").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IllegalBehavior> IllegalBehavior1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IllegalBehavior>("ImageAnalyseDBModel.FK_AnalyseResult_11", "IllegalBehavior");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IllegalBehavior>("ImageAnalyseDBModel.FK_AnalyseResult_11", "IllegalBehavior", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="IllegalBehavior")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IllegalBehavior : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 IllegalBehavior 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="notWearSafeBelt">NotWearSafeBelt 属性的初始值。</param>
        /// <param name="sunShielding">SunShielding 属性的初始值。</param>
        /// <param name="phoneCalling">PhoneCalling 属性的初始值。</param>
        public static IllegalBehavior CreateIllegalBehavior(global::System.Int64 id, global::System.Byte notWearSafeBelt, global::System.Byte sunShielding, global::System.Byte phoneCalling)
        {
            IllegalBehavior illegalBehavior = new IllegalBehavior();
            illegalBehavior.Id = id;
            illegalBehavior.NotWearSafeBelt = notWearSafeBelt;
            illegalBehavior.SunShielding = sunShielding;
            illegalBehavior.PhoneCalling = phoneCalling;
            return illegalBehavior;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte NotWearSafeBelt
        {
            get
            {
                return _NotWearSafeBelt;
            }
            set
            {
                OnNotWearSafeBeltChanging(value);
                ReportPropertyChanging("NotWearSafeBelt");
                _NotWearSafeBelt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotWearSafeBelt");
                OnNotWearSafeBeltChanged();
            }
        }
        private global::System.Byte _NotWearSafeBelt;
        partial void OnNotWearSafeBeltChanging(global::System.Byte value);
        partial void OnNotWearSafeBeltChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SunShielding
        {
            get
            {
                return _SunShielding;
            }
            set
            {
                OnSunShieldingChanging(value);
                ReportPropertyChanging("SunShielding");
                _SunShielding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SunShielding");
                OnSunShieldingChanged();
            }
        }
        private global::System.Byte _SunShielding;
        partial void OnSunShieldingChanging(global::System.Byte value);
        partial void OnSunShieldingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PhoneCalling
        {
            get
            {
                return _PhoneCalling;
            }
            set
            {
                OnPhoneCallingChanging(value);
                ReportPropertyChanging("PhoneCalling");
                _PhoneCalling = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneCalling");
                OnPhoneCallingChanged();
            }
        }
        private global::System.Byte _PhoneCalling;
        partial void OnPhoneCallingChanging(global::System.Byte value);
        partial void OnPhoneCallingChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_02", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_02", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_02", "AnalyseResult", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_11", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_11", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_11", "AnalyseResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="PlateColor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlateColor : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PlateColor 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static PlateColor CreatePlateColor(global::System.Byte id, global::System.String name)
        {
            PlateColor plateColor = new PlateColor();
            plateColor.Id = id;
            plateColor.Name = name;
            return plateColor;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Byte _Id;
        partial void OnIdChanging(global::System.Byte value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_1", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_1", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_1", "AnalyseResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="PlateStructure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlateStructure : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PlateStructure 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static PlateStructure CreatePlateStructure(global::System.Byte id, global::System.String name)
        {
            PlateStructure plateStructure = new PlateStructure();
            plateStructure.Id = id;
            plateStructure.Name = name;
            return plateStructure;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Byte _Id;
        partial void OnIdChanging(global::System.Byte value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_4", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_4", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_4", "AnalyseResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Task 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="uRL">URL 属性的初始值。</param>
        /// <param name="fileType">FileType 属性的初始值。</param>
        /// <param name="status">Status 属性的初始值。</param>
        /// <param name="calibration_PlateAreaX">Calibration_PlateAreaX 属性的初始值。</param>
        /// <param name="calibration_PlateAreaY">Calibration_PlateAreaY 属性的初始值。</param>
        /// <param name="calibration_PlateAreaW">Calibration_PlateAreaW 属性的初始值。</param>
        /// <param name="calibration_PlateAreaH">Calibration_PlateAreaH 属性的初始值。</param>
        /// <param name="calibration_PicW">Calibration_PicW 属性的初始值。</param>
        /// <param name="calibration_PicH">Calibration_PicH 属性的初始值。</param>
        /// <param name="calibration_DetectionAreaX">Calibration_DetectionAreaX 属性的初始值。</param>
        /// <param name="calibration_DetectionAreaY">Calibration_DetectionAreaY 属性的初始值。</param>
        /// <param name="calibration_DetectionAreaW">Calibration_DetectionAreaW 属性的初始值。</param>
        /// <param name="calibration_DetectionAreaH">Calibration_DetectionAreaH 属性的初始值。</param>
        /// <param name="calibration_PlateLocationType">Calibration_PlateLocationType 属性的初始值。</param>
        /// <param name="calibration_DateTime">Calibration_DateTime 属性的初始值。</param>
        /// <param name="calibration_SnapshotInterval">Calibration_SnapshotInterval 属性的初始值。</param>
        /// <param name="calibration_PlateRangeMin">Calibration_PlateRangeMin 属性的初始值。</param>
        /// <param name="calibration_PlateRangeMax">Calibration_PlateRangeMax 属性的初始值。</param>
        /// <param name="includeChildFolder">IncludeChildFolder 属性的初始值。</param>
        public static Task CreateTask(global::System.Int64 id, global::System.String name, global::System.String uRL, global::System.Decimal fileType, global::System.Decimal status, global::System.Int32 calibration_PlateAreaX, global::System.Int32 calibration_PlateAreaY, global::System.Int32 calibration_PlateAreaW, global::System.Int32 calibration_PlateAreaH, global::System.Int32 calibration_PicW, global::System.Int32 calibration_PicH, global::System.Int32 calibration_DetectionAreaX, global::System.Int32 calibration_DetectionAreaY, global::System.Int32 calibration_DetectionAreaW, global::System.Int32 calibration_DetectionAreaH, global::System.Byte calibration_PlateLocationType, global::System.DateTime calibration_DateTime, global::System.Int16 calibration_SnapshotInterval, global::System.Int32 calibration_PlateRangeMin, global::System.Int32 calibration_PlateRangeMax, global::System.Boolean includeChildFolder)
        {
            Task task = new Task();
            task.Id = id;
            task.Name = name;
            task.URL = uRL;
            task.FileType = fileType;
            task.Status = status;
            task.Calibration_PlateAreaX = calibration_PlateAreaX;
            task.Calibration_PlateAreaY = calibration_PlateAreaY;
            task.Calibration_PlateAreaW = calibration_PlateAreaW;
            task.Calibration_PlateAreaH = calibration_PlateAreaH;
            task.Calibration_PicW = calibration_PicW;
            task.Calibration_PicH = calibration_PicH;
            task.Calibration_DetectionAreaX = calibration_DetectionAreaX;
            task.Calibration_DetectionAreaY = calibration_DetectionAreaY;
            task.Calibration_DetectionAreaW = calibration_DetectionAreaW;
            task.Calibration_DetectionAreaH = calibration_DetectionAreaH;
            task.Calibration_PlateLocationType = calibration_PlateLocationType;
            task.Calibration_DateTime = calibration_DateTime;
            task.Calibration_SnapshotInterval = calibration_SnapshotInterval;
            task.Calibration_PlateRangeMin = calibration_PlateRangeMin;
            task.Calibration_PlateRangeMax = calibration_PlateRangeMax;
            task.IncludeChildFolder = includeChildFolder;
            return task;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FileType
        {
            get
            {
                return _FileType;
            }
            set
            {
                OnFileTypeChanging(value);
                ReportPropertyChanging("FileType");
                _FileType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileType");
                OnFileTypeChanged();
            }
        }
        private global::System.Decimal _FileType;
        partial void OnFileTypeChanging(global::System.Decimal value);
        partial void OnFileTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Decimal _Status;
        partial void OnStatusChanging(global::System.Decimal value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FileCount
        {
            get
            {
                return _FileCount;
            }
            set
            {
                OnFileCountChanging(value);
                ReportPropertyChanging("FileCount");
                _FileCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileCount");
                OnFileCountChanged();
            }
        }
        private Nullable<global::System.Int64> _FileCount;
        partial void OnFileCountChanging(Nullable<global::System.Int64> value);
        partial void OnFileCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> NotRecognizedCount
        {
            get
            {
                return _NotRecognizedCount;
            }
            set
            {
                OnNotRecognizedCountChanging(value);
                ReportPropertyChanging("NotRecognizedCount");
                _NotRecognizedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotRecognizedCount");
                OnNotRecognizedCountChanged();
            }
        }
        private Nullable<global::System.Int64> _NotRecognizedCount;
        partial void OnNotRecognizedCountChanging(Nullable<global::System.Int64> value);
        partial void OnNotRecognizedCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RecognizedCount
        {
            get
            {
                return _RecognizedCount;
            }
            set
            {
                OnRecognizedCountChanging(value);
                ReportPropertyChanging("RecognizedCount");
                _RecognizedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecognizedCount");
                OnRecognizedCountChanged();
            }
        }
        private Nullable<global::System.Int64> _RecognizedCount;
        partial void OnRecognizedCountChanging(Nullable<global::System.Int64> value);
        partial void OnRecognizedCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ImageErrorCount
        {
            get
            {
                return _ImageErrorCount;
            }
            set
            {
                OnImageErrorCountChanging(value);
                ReportPropertyChanging("ImageErrorCount");
                _ImageErrorCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImageErrorCount");
                OnImageErrorCountChanged();
            }
        }
        private Nullable<global::System.Int64> _ImageErrorCount;
        partial void OnImageErrorCountChanging(Nullable<global::System.Int64> value);
        partial void OnImageErrorCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileAccessUserName
        {
            get
            {
                return _FileAccessUserName;
            }
            set
            {
                OnFileAccessUserNameChanging(value);
                ReportPropertyChanging("FileAccessUserName");
                _FileAccessUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileAccessUserName");
                OnFileAccessUserNameChanged();
            }
        }
        private global::System.String _FileAccessUserName;
        partial void OnFileAccessUserNameChanging(global::System.String value);
        partial void OnFileAccessUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileAccessPassword
        {
            get
            {
                return _FileAccessPassword;
            }
            set
            {
                OnFileAccessPasswordChanging(value);
                ReportPropertyChanging("FileAccessPassword");
                _FileAccessPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileAccessPassword");
                OnFileAccessPasswordChanged();
            }
        }
        private global::System.String _FileAccessPassword;
        partial void OnFileAccessPasswordChanging(global::System.String value);
        partial void OnFileAccessPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CameraId
        {
            get
            {
                return _CameraId;
            }
            set
            {
                OnCameraIdChanging(value);
                ReportPropertyChanging("CameraId");
                _CameraId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CameraId");
                OnCameraIdChanged();
            }
        }
        private Nullable<global::System.Int64> _CameraId;
        partial void OnCameraIdChanging(Nullable<global::System.Int64> value);
        partial void OnCameraIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartAnalyseTime
        {
            get
            {
                return _StartAnalyseTime;
            }
            set
            {
                OnStartAnalyseTimeChanging(value);
                ReportPropertyChanging("StartAnalyseTime");
                _StartAnalyseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartAnalyseTime");
                OnStartAnalyseTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartAnalyseTime;
        partial void OnStartAnalyseTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartAnalyseTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_PlateAreaX
        {
            get
            {
                return _Calibration_PlateAreaX;
            }
            set
            {
                OnCalibration_PlateAreaXChanging(value);
                ReportPropertyChanging("Calibration_PlateAreaX");
                _Calibration_PlateAreaX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PlateAreaX");
                OnCalibration_PlateAreaXChanged();
            }
        }
        private global::System.Int32 _Calibration_PlateAreaX;
        partial void OnCalibration_PlateAreaXChanging(global::System.Int32 value);
        partial void OnCalibration_PlateAreaXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_PlateAreaY
        {
            get
            {
                return _Calibration_PlateAreaY;
            }
            set
            {
                OnCalibration_PlateAreaYChanging(value);
                ReportPropertyChanging("Calibration_PlateAreaY");
                _Calibration_PlateAreaY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PlateAreaY");
                OnCalibration_PlateAreaYChanged();
            }
        }
        private global::System.Int32 _Calibration_PlateAreaY;
        partial void OnCalibration_PlateAreaYChanging(global::System.Int32 value);
        partial void OnCalibration_PlateAreaYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_PlateAreaW
        {
            get
            {
                return _Calibration_PlateAreaW;
            }
            set
            {
                OnCalibration_PlateAreaWChanging(value);
                ReportPropertyChanging("Calibration_PlateAreaW");
                _Calibration_PlateAreaW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PlateAreaW");
                OnCalibration_PlateAreaWChanged();
            }
        }
        private global::System.Int32 _Calibration_PlateAreaW;
        partial void OnCalibration_PlateAreaWChanging(global::System.Int32 value);
        partial void OnCalibration_PlateAreaWChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_PlateAreaH
        {
            get
            {
                return _Calibration_PlateAreaH;
            }
            set
            {
                OnCalibration_PlateAreaHChanging(value);
                ReportPropertyChanging("Calibration_PlateAreaH");
                _Calibration_PlateAreaH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PlateAreaH");
                OnCalibration_PlateAreaHChanged();
            }
        }
        private global::System.Int32 _Calibration_PlateAreaH;
        partial void OnCalibration_PlateAreaHChanging(global::System.Int32 value);
        partial void OnCalibration_PlateAreaHChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_PicW
        {
            get
            {
                return _Calibration_PicW;
            }
            set
            {
                OnCalibration_PicWChanging(value);
                ReportPropertyChanging("Calibration_PicW");
                _Calibration_PicW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PicW");
                OnCalibration_PicWChanged();
            }
        }
        private global::System.Int32 _Calibration_PicW;
        partial void OnCalibration_PicWChanging(global::System.Int32 value);
        partial void OnCalibration_PicWChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_PicH
        {
            get
            {
                return _Calibration_PicH;
            }
            set
            {
                OnCalibration_PicHChanging(value);
                ReportPropertyChanging("Calibration_PicH");
                _Calibration_PicH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PicH");
                OnCalibration_PicHChanged();
            }
        }
        private global::System.Int32 _Calibration_PicH;
        partial void OnCalibration_PicHChanging(global::System.Int32 value);
        partial void OnCalibration_PicHChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_DetectionAreaX
        {
            get
            {
                return _Calibration_DetectionAreaX;
            }
            set
            {
                OnCalibration_DetectionAreaXChanging(value);
                ReportPropertyChanging("Calibration_DetectionAreaX");
                _Calibration_DetectionAreaX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_DetectionAreaX");
                OnCalibration_DetectionAreaXChanged();
            }
        }
        private global::System.Int32 _Calibration_DetectionAreaX;
        partial void OnCalibration_DetectionAreaXChanging(global::System.Int32 value);
        partial void OnCalibration_DetectionAreaXChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_DetectionAreaY
        {
            get
            {
                return _Calibration_DetectionAreaY;
            }
            set
            {
                OnCalibration_DetectionAreaYChanging(value);
                ReportPropertyChanging("Calibration_DetectionAreaY");
                _Calibration_DetectionAreaY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_DetectionAreaY");
                OnCalibration_DetectionAreaYChanged();
            }
        }
        private global::System.Int32 _Calibration_DetectionAreaY;
        partial void OnCalibration_DetectionAreaYChanging(global::System.Int32 value);
        partial void OnCalibration_DetectionAreaYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_DetectionAreaW
        {
            get
            {
                return _Calibration_DetectionAreaW;
            }
            set
            {
                OnCalibration_DetectionAreaWChanging(value);
                ReportPropertyChanging("Calibration_DetectionAreaW");
                _Calibration_DetectionAreaW = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_DetectionAreaW");
                OnCalibration_DetectionAreaWChanged();
            }
        }
        private global::System.Int32 _Calibration_DetectionAreaW;
        partial void OnCalibration_DetectionAreaWChanging(global::System.Int32 value);
        partial void OnCalibration_DetectionAreaWChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_DetectionAreaH
        {
            get
            {
                return _Calibration_DetectionAreaH;
            }
            set
            {
                OnCalibration_DetectionAreaHChanging(value);
                ReportPropertyChanging("Calibration_DetectionAreaH");
                _Calibration_DetectionAreaH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_DetectionAreaH");
                OnCalibration_DetectionAreaHChanged();
            }
        }
        private global::System.Int32 _Calibration_DetectionAreaH;
        partial void OnCalibration_DetectionAreaHChanging(global::System.Int32 value);
        partial void OnCalibration_DetectionAreaHChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Calibration_PlateLocationType
        {
            get
            {
                return _Calibration_PlateLocationType;
            }
            set
            {
                OnCalibration_PlateLocationTypeChanging(value);
                ReportPropertyChanging("Calibration_PlateLocationType");
                _Calibration_PlateLocationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PlateLocationType");
                OnCalibration_PlateLocationTypeChanged();
            }
        }
        private global::System.Byte _Calibration_PlateLocationType;
        partial void OnCalibration_PlateLocationTypeChanging(global::System.Byte value);
        partial void OnCalibration_PlateLocationTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Calibration_DateTime
        {
            get
            {
                return _Calibration_DateTime;
            }
            set
            {
                OnCalibration_DateTimeChanging(value);
                ReportPropertyChanging("Calibration_DateTime");
                _Calibration_DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_DateTime");
                OnCalibration_DateTimeChanged();
            }
        }
        private global::System.DateTime _Calibration_DateTime;
        partial void OnCalibration_DateTimeChanging(global::System.DateTime value);
        partial void OnCalibration_DateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Calibration_SnapshotInterval
        {
            get
            {
                return _Calibration_SnapshotInterval;
            }
            set
            {
                OnCalibration_SnapshotIntervalChanging(value);
                ReportPropertyChanging("Calibration_SnapshotInterval");
                _Calibration_SnapshotInterval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_SnapshotInterval");
                OnCalibration_SnapshotIntervalChanged();
            }
        }
        private global::System.Int16 _Calibration_SnapshotInterval;
        partial void OnCalibration_SnapshotIntervalChanging(global::System.Int16 value);
        partial void OnCalibration_SnapshotIntervalChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinishedTime
        {
            get
            {
                return _FinishedTime;
            }
            set
            {
                OnFinishedTimeChanging(value);
                ReportPropertyChanging("FinishedTime");
                _FinishedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishedTime");
                OnFinishedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinishedTime;
        partial void OnFinishedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> NoPlateCount
        {
            get
            {
                return _NoPlateCount;
            }
            set
            {
                OnNoPlateCountChanging(value);
                ReportPropertyChanging("NoPlateCount");
                _NoPlateCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoPlateCount");
                OnNoPlateCountChanged();
            }
        }
        private Nullable<global::System.Int64> _NoPlateCount;
        partial void OnNoPlateCountChanging(Nullable<global::System.Int64> value);
        partial void OnNoPlateCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_PlateRangeMin
        {
            get
            {
                return _Calibration_PlateRangeMin;
            }
            set
            {
                OnCalibration_PlateRangeMinChanging(value);
                ReportPropertyChanging("Calibration_PlateRangeMin");
                _Calibration_PlateRangeMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PlateRangeMin");
                OnCalibration_PlateRangeMinChanged();
            }
        }
        private global::System.Int32 _Calibration_PlateRangeMin;
        partial void OnCalibration_PlateRangeMinChanging(global::System.Int32 value);
        partial void OnCalibration_PlateRangeMinChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Calibration_PlateRangeMax
        {
            get
            {
                return _Calibration_PlateRangeMax;
            }
            set
            {
                OnCalibration_PlateRangeMaxChanging(value);
                ReportPropertyChanging("Calibration_PlateRangeMax");
                _Calibration_PlateRangeMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calibration_PlateRangeMax");
                OnCalibration_PlateRangeMaxChanged();
            }
        }
        private global::System.Int32 _Calibration_PlateRangeMax;
        partial void OnCalibration_PlateRangeMaxChanging(global::System.Int32 value);
        partial void OnCalibration_PlateRangeMaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeChildFolder
        {
            get
            {
                return _IncludeChildFolder;
            }
            set
            {
                OnIncludeChildFolderChanging(value);
                ReportPropertyChanging("IncludeChildFolder");
                _IncludeChildFolder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncludeChildFolder");
                OnIncludeChildFolderChanged();
            }
        }
        private global::System.Boolean _IncludeChildFolder;
        partial void OnIncludeChildFolderChanging(global::System.Boolean value);
        partial void OnIncludeChildFolderChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_01", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_01", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_01", "AnalyseResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="VehicleBrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleBrand : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VehicleBrand 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static VehicleBrand CreateVehicleBrand(global::System.Int64 id, global::System.String name)
        {
            VehicleBrand vehicleBrand = new VehicleBrand();
            vehicleBrand.Id = id;
            vehicleBrand.Name = name;
            return vehicleBrand;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int64> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FrontPic
        {
            get
            {
                return _FrontPic;
            }
            set
            {
                OnFrontPicChanging(value);
                ReportPropertyChanging("FrontPic");
                _FrontPic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FrontPic");
                OnFrontPicChanged();
            }
        }
        private global::System.String _FrontPic;
        partial void OnFrontPicChanging(global::System.String value);
        partial void OnFrontPicChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackPic
        {
            get
            {
                return _BackPic;
            }
            set
            {
                OnBackPicChanging(value);
                ReportPropertyChanging("BackPic");
                _BackPic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackPic");
                OnBackPicChanged();
            }
        }
        private global::System.String _BackPic;
        partial void OnBackPicChanging(global::System.String value);
        partial void OnBackPicChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Logo
        {
            get
            {
                return StructuralObject.GetValidValue(_Logo);
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.Byte[] _Logo;
        partial void OnLogoChanging(global::System.Byte[] value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Front
        {
            get
            {
                return StructuralObject.GetValidValue(_Front);
            }
            set
            {
                OnFrontChanging(value);
                ReportPropertyChanging("Front");
                _Front = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Front");
                OnFrontChanged();
            }
        }
        private global::System.Byte[] _Front;
        partial void OnFrontChanging(global::System.Byte[] value);
        partial void OnFrontChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Back
        {
            get
            {
                return StructuralObject.GetValidValue(_Back);
            }
            set
            {
                OnBackChanging(value);
                ReportPropertyChanging("Back");
                _Back = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Back");
                OnBackChanged();
            }
        }
        private global::System.Byte[] _Back;
        partial void OnBackChanging(global::System.Byte[] value);
        partial void OnBackChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_5", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_5", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_5", "AnalyseResult", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_VehicleBrand_0", "VehicleBrand1")]
        public EntityCollection<VehicleBrand> VehicleBrand1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VehicleBrand>("ImageAnalyseDBModel.FK_VehicleBrand_0", "VehicleBrand1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VehicleBrand>("ImageAnalyseDBModel.FK_VehicleBrand_0", "VehicleBrand1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_VehicleBrand_0", "VehicleBrand")]
        public VehicleBrand VehicleBrand2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleBrand>("ImageAnalyseDBModel.FK_VehicleBrand_0", "VehicleBrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleBrand>("ImageAnalyseDBModel.FK_VehicleBrand_0", "VehicleBrand").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleBrand> VehicleBrand2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleBrand>("ImageAnalyseDBModel.FK_VehicleBrand_0", "VehicleBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VehicleBrand>("ImageAnalyseDBModel.FK_VehicleBrand_0", "VehicleBrand", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="VehicleColor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleColor : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VehicleColor 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static VehicleColor CreateVehicleColor(global::System.Byte id, global::System.String name)
        {
            VehicleColor vehicleColor = new VehicleColor();
            vehicleColor.Id = id;
            vehicleColor.Name = name;
            return vehicleColor;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Byte _Id;
        partial void OnIdChanging(global::System.Byte value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_0", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_0", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_0", "AnalyseResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="VehicleDetailType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleDetailType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VehicleDetailType 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="displayIndex">DisplayIndex 属性的初始值。</param>
        public static VehicleDetailType CreateVehicleDetailType(global::System.Byte id, global::System.String name, global::System.Byte displayIndex)
        {
            VehicleDetailType vehicleDetailType = new VehicleDetailType();
            vehicleDetailType.Id = id;
            vehicleDetailType.Name = name;
            vehicleDetailType.DisplayIndex = displayIndex;
            return vehicleDetailType;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Byte _Id;
        partial void OnIdChanging(global::System.Byte value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte DisplayIndex
        {
            get
            {
                return _DisplayIndex;
            }
            set
            {
                OnDisplayIndexChanging(value);
                ReportPropertyChanging("DisplayIndex");
                _DisplayIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayIndex");
                OnDisplayIndexChanged();
            }
        }
        private global::System.Byte _DisplayIndex;
        partial void OnDisplayIndexChanging(global::System.Byte value);
        partial void OnDisplayIndexChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_3", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_3", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_3", "AnalyseResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImageAnalyseDBModel", Name="VehicleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VehicleType 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static VehicleType CreateVehicleType(global::System.Byte id, global::System.String name)
        {
            VehicleType vehicleType = new VehicleType();
            vehicleType.Id = id;
            vehicleType.Name = name;
            return vehicleType;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Byte _Id;
        partial void OnIdChanging(global::System.Byte value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImageAnalyseDBModel", "FK_AnalyseResult_2", "AnalyseResult")]
        public EntityCollection<AnalyseResult> AnalyseResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_2", "AnalyseResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AnalyseResult>("ImageAnalyseDBModel.FK_AnalyseResult_2", "AnalyseResult", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
